// generated by Proto2Typescript. do not touch!

declare module datariver {
	interface ProtoBufModel {
		toArrayBuffer(): ArrayBuffer;
		//toBuffer(): NodeBuffer;
		//encode(): ByteBuffer;
		toBase64(): string;
		toString(): string;
	}

	export interface ProtoBufBuilder {
		Review: ReviewBuilder;
		ReviewResponse: ReviewResponseBuilder;
		MultiReviewResponse: MultiReviewResponseBuilder;
		GetReviewRequest: GetReviewRequestBuilder;
		DeleteReviewRequest: DeleteReviewRequestBuilder;
		ListReviewsRequest: ListReviewsRequestBuilder;
		Geo: GeoBuilder;
		Listing: ListingBuilder;
		ListingResponse: ListingResponseBuilder;
		GetListingRequest: GetListingRequestBuilder;
		DeleteListingRequest: DeleteListingRequestBuilder;
		
	}
}

declare module datariver {

	export interface Review extends ProtoBufModel {
		review_id?: string;
		listing_id?: string;
		url?: string;
		star_rating?: number;
		reviewer_name?: string;
		reviewer_email?: string;
		reviewer_url?: string;
		content?: string;
		published_date?: number;
		title?: string;
		
	}
	
	export interface ReviewBuilder {
		new(): Review;
		decode(buffer: ArrayBuffer) : Review;
		//decode(buffer: NodeBuffer) : Review;
		//decode(buffer: ByteArrayBuffer) : Review;
		decode64(buffer: string) : Review;
		
	}	
}

declare module datariver {

	export interface ReviewResponse extends ProtoBufModel {
		review_id?: string;
		listing_id?: string;
		status?: ReviewResponse.StatusCodes;
		error?: string;
		review?: Review;
		
	}
	
	export interface ReviewResponseBuilder {
		new(): ReviewResponse;
		decode(buffer: ArrayBuffer) : ReviewResponse;
		//decode(buffer: NodeBuffer) : ReviewResponse;
		//decode(buffer: ByteArrayBuffer) : ReviewResponse;
		decode64(buffer: string) : ReviewResponse;
		StatusCodes: ReviewResponse.StatusCodes;
		
	}	
}

declare module datariver.ReviewResponse {
	export const enum StatusCodes {
		UNUSED = 0,
		SUCCESS = 1,
		ERROR = 2,
		REJECTED = 3,
		NOT_FOUND = 4,
		
	}
}

declare module datariver {

	export interface MultiReviewResponse extends ProtoBufModel {
		listing_id?: string;
		listing_external_id?: string;
		status?: MultiReviewResponse.StatusCodes;
		error?: string;
		reviews: Review[];
		
	}
	
	export interface MultiReviewResponseBuilder {
		new(): MultiReviewResponse;
		decode(buffer: ArrayBuffer) : MultiReviewResponse;
		//decode(buffer: NodeBuffer) : MultiReviewResponse;
		//decode(buffer: ByteArrayBuffer) : MultiReviewResponse;
		decode64(buffer: string) : MultiReviewResponse;
		StatusCodes: MultiReviewResponse.StatusCodes;
		
	}	
}

declare module datariver.MultiReviewResponse {
	export const enum StatusCodes {
		UNUSED = 0,
		SUCCESS = 1,
		ERROR = 2,
		REJECTED = 3,
		NOT_FOUND = 4,
		
	}
}

declare module datariver {

	export interface GetReviewRequest extends ProtoBufModel {
		review_id?: string;
		
	}
	
	export interface GetReviewRequestBuilder {
		new(): GetReviewRequest;
		decode(buffer: ArrayBuffer) : GetReviewRequest;
		//decode(buffer: NodeBuffer) : GetReviewRequest;
		//decode(buffer: ByteArrayBuffer) : GetReviewRequest;
		decode64(buffer: string) : GetReviewRequest;
		
	}	
}

declare module datariver {

	export interface DeleteReviewRequest extends ProtoBufModel {
		review_id?: string;
		
	}
	
	export interface DeleteReviewRequestBuilder {
		new(): DeleteReviewRequest;
		decode(buffer: ArrayBuffer) : DeleteReviewRequest;
		//decode(buffer: NodeBuffer) : DeleteReviewRequest;
		//decode(buffer: ByteArrayBuffer) : DeleteReviewRequest;
		decode64(buffer: string) : DeleteReviewRequest;
		
	}	
}

declare module datariver {

	export interface ListReviewsRequest extends ProtoBufModel {
		listing_id?: string;
		listing_external_id?: string;
		offset?: number;
		page_size?: number;
		
	}
	
	export interface ListReviewsRequestBuilder {
		new(): ListReviewsRequest;
		decode(buffer: ArrayBuffer) : ListReviewsRequest;
		//decode(buffer: NodeBuffer) : ListReviewsRequest;
		//decode(buffer: ByteArrayBuffer) : ListReviewsRequest;
		decode64(buffer: string) : ListReviewsRequest;
		
	}	
}

declare module datariver {

	export interface Geo extends ProtoBufModel {
		latitude?: number;
		longitude?: number;
		
	}
	
	export interface GeoBuilder {
		new(): Geo;
		decode(buffer: ArrayBuffer) : Geo;
		//decode(buffer: NodeBuffer) : Geo;
		//decode(buffer: ByteArrayBuffer) : Geo;
		decode64(buffer: string) : Geo;
		
	}	
}

declare module datariver {

	export interface Listing extends ProtoBufModel {
		listing_id?: string;
		external_id?: string;
		url?: string;
		company_name?: string;
		address?: string;
		city?: string;
		state?: string;
		country?: string;
		zip_code?: string;
		location?: Geo;
		phone?: string;
		additional_phone_numbers: string[];
		website?: string;
		number_of_reviews?: number;
		average_review_rating?: number;
		business_categories: string[];
		
	}
	
	export interface ListingBuilder {
		new(): Listing;
		decode(buffer: ArrayBuffer) : Listing;
		//decode(buffer: NodeBuffer) : Listing;
		//decode(buffer: ByteArrayBuffer) : Listing;
		decode64(buffer: string) : Listing;
		
	}	
}

declare module datariver {

	export interface ListingResponse extends ProtoBufModel {
		listing_id?: string;
		external_id?: string;
		status?: ListingResponse.StatusCodes;
		error?: string;
		listing?: Listing;
		
	}
	
	export interface ListingResponseBuilder {
		new(): ListingResponse;
		decode(buffer: ArrayBuffer) : ListingResponse;
		//decode(buffer: NodeBuffer) : ListingResponse;
		//decode(buffer: ByteArrayBuffer) : ListingResponse;
		decode64(buffer: string) : ListingResponse;
		StatusCodes: ListingResponse.StatusCodes;
		
	}	
}

declare module datariver.ListingResponse {
	export const enum StatusCodes {
		UNUSED = 0,
		SUCCESS = 1,
		ERROR = 2,
		REJECTED = 3,
		NOT_FOUND = 4,
		
	}
}

declare module datariver {

	export interface GetListingRequest extends ProtoBufModel {
		listing_id?: string;
		
	}
	
	export interface GetListingRequestBuilder {
		new(): GetListingRequest;
		decode(buffer: ArrayBuffer) : GetListingRequest;
		//decode(buffer: NodeBuffer) : GetListingRequest;
		//decode(buffer: ByteArrayBuffer) : GetListingRequest;
		decode64(buffer: string) : GetListingRequest;
		
	}	
}

declare module datariver {

	export interface DeleteListingRequest extends ProtoBufModel {
		listing_id?: string;
		
	}
	
	export interface DeleteListingRequestBuilder {
		new(): DeleteListingRequest;
		decode(buffer: ArrayBuffer) : DeleteListingRequest;
		//decode(buffer: NodeBuffer) : DeleteListingRequest;
		//decode(buffer: ByteArrayBuffer) : DeleteListingRequest;
		decode64(buffer: string) : DeleteListingRequest;
		
	}	
}
