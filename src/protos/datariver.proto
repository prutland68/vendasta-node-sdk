// To generate SDK:
// protoc ./datariver.proto --python_out=. --grpc_out=. --plugin=protoc-gen-grpc=`which grpc_python_plugin`

syntax = "proto3";

package datariver;

message Geo {
	double latitude = 1;
	double longitude = 2;
}

// based on RawListing VObject
message Listing {
	string listing_id = 1;
	string external_id = 2;
	string url = 4; // canonical URL

	//Basic NAP data
	string company_name = 5;
	string address = 6;
	string city = 7;
	string state = 8;
	string country = 9;
	string zip_code = 10;
	Geo location = 11;
	string phone = 12;
	repeated string additional_phone_numbers = 13;
	string website = 14;

	//Extended NAP data
	int32 number_of_reviews = 15;
	float average_review_rating = 16;
	repeated string business_categories = 17;
}

message ListingResponse {
	string listing_id = 1;
	string external_id = 2;
	enum StatusCodes {
	    UNUSED = 0;
	    SUCCESS = 1;
	    ERROR = 2;
	    REJECTED = 3;
	    NOT_FOUND = 4;
	}
	StatusCodes status = 3;
	string error = 4;
	Listing listing = 5;
}

message GetListingRequest {
	string listing_id = 1;
}

message DeleteListingRequest {
	string listing_id = 1;
}

service DataRiver {
	// rpc StreamListing(stream Listing) returns (stream ListingResponse);
	rpc PutListing(Listing) returns (ListingResponse);
	rpc GetListing(GetListingRequest) returns (ListingResponse);
	rpc DeleteListing(DeleteListingRequest) returns (ListingResponse);
}
